class CryptCpException(Exception):
    """Исключения приложения cryptcp"""

    def __init__(self, code: hex):
        self.code: hex = code
        errors = {
            0x00000001: 'Вместо результата получили список допустимых параметров',
            0x000000FE: 'Запрос на подключение носителя для создания контейнера',
            0x000000FF: 'Не корректное завершение процесса cryptcp',
            0x00000194: 'УЦ недоступен',
            0x000001F6: 'Unknown error. Не удалось отправить запрос в CA',
            0x00002EE7: 'Адрес сервера УЦ недоступен',
            0x200000C9: 'Не корректно переданы параметры',
            0x8009000F: 'Такой контейнер уже существует',
        }
        self.text = errors.get(code, 'Неизвестная ошибка')

    def __str__(self):
        return f'0x{self.code:08x}: {self.text}'


class CertMgrException(Exception):
    """Исключения приложения cryptcp"""

    def __init__(self, code: hex):
        self.code: hex = code
        errors = {
            0x00000001: 'Не удалось импортировать указанный файл',
            0x00000056: 'Не корректный пин-код',
            0x000000FF: 'Не корректное завершение процесса certmgr',
            0x00000667: 'Найдены бесполезные позиционные аргументы',
            0x80090016: 'Ошибка удаления контейнера. Контейнер не найден',
            0x8009001F: 'Ошибка удаления контейнера. Не верное значение параметра',
            0x8010002C: 'Сертификат не найден',
        }
        self.text = errors.get(code, 'Неизвестная ошибка')

    def __str__(self):
        return f'0x{self.code:08x}: {self.text}'
